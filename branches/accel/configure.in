# **********************************************
#          Initial setup, project name, etc.
# **********************************************
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)

AC_INIT([evoli], [1.0], [dadrummond@gmail.com])
AC_CONFIG_AUX_DIR([config])
AC_CONFIG_SRCDIR([src/folder/folder.hh])
AM_INIT_AUTOMAKE([1.6.3 foreign])

# **********************************************
#            Check for compilers and libraries
# **********************************************

AC_LANG_CPLUSPLUS

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_RANLIB

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS(iostream sstream fstream)
AC_CHECK_HEADERS([python2.4/Python.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_CHECK_FUNCS([pow sqrt])

# **********************************************
#                   Configure options
# **********************************************

# debuging and profiling options
AC_ARG_ENABLE(debug,
[  --disable-debug: Don't compile with debugging symbols],
  CXXFLAGS="-O2",
  CXXFLAGS="-g -DDEBUG"
)

AC_ARG_ENABLE(profile,
[  --enable-profile: Compile with profiling symbols],
  CXXFLAGS="${CXXFLAGS} -pg")

AC_ARG_ENABLE(final,
[  --enable-final: Compile with aggressive optimization, don't include any debugging symbols],
  CXXFLAGS="-O3 -ffast-math -fomit-frame-pointer -DNDEBUG"
# Architecture-specific optimization flags
# Uncomment for Intel Core Duo
#  CXXFLAGS="-O3 -ffast-math -fomit-frame-pointer -march=pentium-m -mtune=prescott -DNDEBUG"
# Uncomment for Intel Pentium 4 family
#  CXXFLAGS="-O3 -ffast-math -fomit-frame-pointer -march=pentium4 -DNDEBUG"
# Uncomment for Intel Pentium 3 family
#  CXXFLAGS="-O3 -ffast-math -fomit-frame-pointer -march=pentium3 -DNDEBUG"
)

AC_ARG_ENABLE(icc,
[  --enable-icc: Like --enable-final, but for icc rather than gcc],
  CXXFLAGS="-O3 -fomit-frame-pointer -DNDEBUG"; LDFLAGS="$LDFLAGS -lstdc++"; CXX="icc"; CC="icc"
)

# documentation
AC_ARG_ENABLE(apidoc,
  [  --disable-apidoc: Do not build API documentation],
  [bapidoc=no],
  # check whether doxygen exists in path, and build documentation only when it exists
  AC_CHECK_PROG(bapidoc, doxygen, yes, no )
)
AM_CONDITIONAL(BUILD_APIDOC, test x$bapidoc = xyes)

# **********************************************
#                 Makefile generation
# **********************************************
AC_CONFIG_FILES([Makefile 
		src/Makefile 
		src/tools/Makefile 
		src/gene/Makefile 
		src/folder/Makefile
		src/evolver/Makefile 
		src/driver/Makefile 
		src/utils/Makefile
		src/python/Makefile
		doc/Makefile 
		test/Makefile])
AC_OUTPUT
